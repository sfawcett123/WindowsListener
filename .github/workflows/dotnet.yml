# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{github.workspace}}/bin/Release/net8.0-windows8.0/publish

permissions:
  deployments: write
  packages: write
  contents: write

defaults:
  run:
    shell: pwsh
    
jobs:
  build:
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get version from tag
      id: get_version
      if: github.event_name == 'release'
      uses: jannemattila/get-version-from-tag@v4
      
    - name: Get Version (release)
      if: github.event_name == 'release'
      shell: bash
      run: |
         VERSION=$(echo "${{ steps.get_version.outputs.version }}")
         dotnet publish --configuration Release -p PackageVersion=${VERSION}

    - name: Get Version (none release)
      if: github.event_name != 'release'
      shell: bash
      run: |
         VERSION=$(date +%s) # Use current timestamp as version
         dotnet publish --configuration Release -p PackageVersion=${VERSION}

    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: package
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}
        
  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:  
    - name: Download package
      uses: actions/download-artifact@v4
      with:
          name: package
          path: ${{ env.NuGetDirectory }}
          
    - name: Compress Repository Excluding Git Files
      uses: somaz94/compress-decompress@v1
      with:
          command: compress
          source: "${{env.NuGetDirectory}}"
          format: zip
          includeRoot: false
          dest: './artifacts'
          destfilename: "broadcast-${{ needs.build.outputs.version }}"  

    - name: Update release     
      uses: softprops/action-gh-release@v2
      with:
          files: './artifacts/*'
