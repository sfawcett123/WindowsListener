# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{github.workspace}}/bin/Release/net8.0-windows7.0/publish

permissions:
  deployments: write
  packages: write
  contents: write

defaults:
  run:
    shell: pwsh
    
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get version from tag
      id: get_version
      if: github.event_name == 'release'
      uses: jannemattila/get-version-from-tag@v4
      
    - name: Get Version (release)
      if: github.event_name == 'release'
      shell: bash
      run: |
         VERSION=$(echo "${{ steps.get_version.outputs.version }}")
         dotnet publish --configuration Release --output -p PackageVersion=${VERSION}

    - name: Get Version (none release)
      if: github.event_name != 'release'
      shell: bash
      run: |
         VERSION=$(date +%s) # Use current timestamp as version
         dotnet publish --configuration Release  -p PackageVersion=${VERSION}
    
    - name: Zip Folder
      run: |
          cd ${{ env.NuGetDirectory }}
          zip -r broadcast-${{ steps.get_version.outputs.version }}.zip *   
          
    - name: Update release     
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'release'
      with:
          files: ${{env.NuGetDirectory}}/broadcast-${{ steps.get_version.outputs.version }}.zip
